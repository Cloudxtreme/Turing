BlockStmt([GWindowStmt(NumberNode(0), NumberNode(1), NumberNode(0), NumberNode(1), NumberNode(1), NumberNode(1)), InputStmt(IdentifierNode('N'), None), AssignStmt(IdentifierNode('compteur'), NumberNode(0)), ForStmt('i', NumberNode(1), IdentifierNode('N'), [AssignStmt(IdentifierNode('x'), CallNode(IdentifierNode('alea'), [])), AssignStmt(IdentifierNode('y'), CallNode(IdentifierNode('alea'), [])), IfStmt(BinOpNode(CallNode(IdentifierNode('hypot'), [IdentifierNode('x'), IdentifierNode('y')]), NumberNode(1), '<='), [GPointStmt(IdentifierNode('x'), IdentifierNode('y'), StringNode('red')), AssignStmt(IdentifierNode('compteur'), BinOpNode(IdentifierNode('compteur'), NumberNode(1), '+'))]), ElseStmt([GPointStmt(IdentifierNode('x'), IdentifierNode('y'), StringNode('blue'))])], None), AssignStmt(IdentifierNode('F'), BinOpNode(IdentifierNode('compteur'), IdentifierNode('N'), '/')), DisplayStmt(BinOpNode(StringNode('La proportion de points rouges est : '), IdentifierNode('F'), '+'), True), DisplayStmt(BinOpNode(StringNode('Pi vaut donc 4 Ã— F soit approximativement '), BinOpNode(NumberNode(4), IdentifierNode('F'), '*'), '+'), True)])